// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String          @id @default(auto()) @map("_id") @db.ObjectId
  email      String          @unique
  role       Role
  workspaces WorkspaceUser[]
  works      Work[]
  createdAt  DateTime        @default(now())
  Workspace  Workspace[]
}

model Workspace {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  isPublic    Boolean         @default(true)
  creatorId   String
  creator     User            @relation(fields: [creatorId], references: [id])
  members     WorkspaceUser[]
  works       Work[]
  createdAt   DateTime        @default(now())
}

model WorkspaceUser {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  workspace   Workspace     @relation(fields: [workspaceId], references: [id])
  workspaceId String
  role        WorkspaceRole
  joinedAt    DateTime      @default(now())

  @@unique([userId, workspaceId])
}

model Work {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  content     String
  createdAt   DateTime  @default(now())
  workspaceId String
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
}

enum Role {
  VISITOR
  STUDENT
  TEACHER
}

enum WorkspaceRole {
  STUDENT
  TEACHER
}
